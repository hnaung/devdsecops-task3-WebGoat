name: DevSecOps Pipeline

on:
  pull_request:
    branches:
      - master

jobs:
  security-scans:
    runs-on: ubuntu-latest
    env:
      ACTIONS_STEP_DEBUG: true
      ACTIONS_RUNNER_DEBUG: true
      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      GH_TOKEN: ${{ secrets.GH_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Clone Repository
        uses: actions/checkout@v3
        with:
          repository: hnaung/devsecops-task3-WebGoat

      - name: Run SAST Scan by using Snyk
        run: |
          mvn -N io.takari:maven:wrapper
          mvn validate
          npm install -g snyk
          echo "JAVA_HOME is set to $JAVA_HOME"
          ls -al
          
          # Create reports directory
          mkdir -p reports || { echo 'Directory creation failed'; exit 1; }
          
          # Run Snyk scans and generate reports
          snyk code test --json > reports/snyk-sast-scan-report.json || echo "Snyk SAST scan completed"
          snyk test --json > reports/snyk-dependency-scan-report.json || echo "Snyk dependency scan completed"
          
          # Configure Git
          git config --global user.email "unixaung@gmail.com"
          git config --global user.name "hnaung"
          
          # # Safely handle existing files and checkout
          # if [ -f "reports/snyk-sast-scan-report.json" ] || [ -f "reports/snyk-dependency-scan-report.json" ]; then
          #   echo "Removing existing report files to prevent conflict during checkout"
          #   rm reports/snyk-sast-scan-report.json
          #   rm reports/snyk-dependency-scan-report.json
          # fi
          
          git fetch origin
          git checkout master
          git pull origin master
          
          # Reset and stage the reports
          git reset --hard HEAD
          git add reports/
          
          # Commit and push if there are changes
          if git diff --cached --quiet; then
            echo "No changes detected, skipping commit and push."
          else
            git commit -m "Snyk Scans Report"
            git push origin master || echo "Git push failed. No changes to push."
          fi
        env:
          JAVA_HOME: ${{ steps.setup-java.outputs.java-home }}
            
      - name: Run Hardcoded Passwords or Sensitive Information Scanning
        run: |
          mvn -N io.takari:maven:wrapper
          mvn validate
          pip install trufflehog
          
          echo "Configuring Git..."
          git config --global user.email "unixaung@gmail.com"
          git config --global user.name "hnaung"
          
          # Safely handle existing files and checkout
          echo "Checking out master branch..."
          git fetch origin
          git checkout master
          git pull origin master
          
          echo "Resetting any local changes..."
          git reset --hard HEAD
          
          echo "Creating reports directory if it doesn't exist..."
          mkdir -p reports || { echo 'Directory creation failed'; exit 1; }
          
          echo "Running TruffleHog scan..."
          trufflehog filesystem --repo_path=. --entropy=True --rules=trufflehog-rules.json --json > reports/trufflehog-report.json || echo "Scan Completed"
          
          echo "Checking if the TruffleHog report was created..."
          if [ -f "reports/trufflehog-report.json" ]; then
            echo "TruffleHog report exists."
          else
            echo "Report does not exist"
            exit 1
          fi
          
          echo "Adding the TruffleHog report to Git..."
          git add reports/trufflehog-report.json
          
          echo "Checking if there are any changes to commit..."
          if git diff --cached --quiet; then
            echo "No changes detected, skipping commit and push."
          else
            echo "Committing and pushing the changes..."
            git commit -m "Add TruffleHog scan report"
            git push origin master || echo "Git push failed. No changes to push."
          fi
        env:
          JAVA_HOME: ${{ steps.setup-java.outputs.java-home }}

      

      - name: Failed build process in case of any high-severity vulnerability findings.
        run: |
          mkdir -p reports || { echo 'Directory creation failed'; exit 1; }
          ls -al
          snyk test --json > reports/snyk-dependency-scan-report.json || echo "Snyk dependency scan completed with issues"
          
          # Check for high-severity issues using grep
          HIGH_SEVERITY_ISSUES=$(grep -c '"severity": "high"' reports/snyk-dependency-scan-report.json || true)
      
          if [ "$HIGH_SEVERITY_ISSUES" -gt 0 ]; then
            echo "High severity issues found: $HIGH_SEVERITY_ISSUES"
            exit 1
          else
            echo "No high severity issues found or string not present, moving forward."
          fi

